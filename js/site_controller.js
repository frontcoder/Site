// Generated by CoffeeScript 1.4.0
(function() {
  var SiteApp,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SiteApp = (function(_super) {

    __extends(SiteApp, _super);

    SiteApp.prototype.elements = {
      '#contentDiv': 'content'
    };

    SiteApp.prototype.events = {
      'click .contentLink': 'changeContent',
      'click .addItem': 'addContent'
    };

    function SiteApp() {
      var lastContent, view,
        _this = this;
      SiteApp.__super__.constructor.apply(this, arguments);
      SiteModel.bind("ajaxSuccess", function(status, xhr) {
        var lastContent;
        _this.log("success loading sites");
        lastContent = JSON.parse(sessionStorage.getItem("lastVisitedSiteContent"));
        if (lastContent === null) {
          return setTimeout(function() {
            return $('#home').click();
          }, 1000);
        }
      });
      SiteModel.bind("ajaxError", function(record, xhr, settings, error) {
        return _this.log(error);
      });
      SiteModel.fetch();
      lastContent = JSON.parse(sessionStorage.getItem("lastVisitedSiteContent"));
      if (lastContent !== null) {
        view = new SiteView({
          siteModel: lastContent
        });
        this.content.html(view.render().el);
      }
    }

    SiteApp.prototype.changeContent = function(e) {
      var targ, view,
        _this = this;
      if (!e) {
        e = window.event;
      }
      targ = e.srcElement ? e.srcElement : e.target;
      if (targ.nodeType === 3) {
        targ = targ.parentNode;
      }
      view = {};
      SiteModel.each(function(item) {
        if (item.name === $(targ).attr('id')) {
          view = new SiteView({
            siteModel: item
          });
          return sessionStorage.setItem("lastVisitedSiteContent", JSON.stringify(item));
        }
      });
      return this.content.html(view.render().el);
    };

    SiteApp.prototype.addContent = function() {
      var cm;
      return cm = SiteModel.create({
        name: "mycontent"
      });
    };

    return SiteApp;

  })(Spine.Controller);

  $(function() {
    return new SiteApp({
      el: $('body')
    });
  });

}).call(this);
