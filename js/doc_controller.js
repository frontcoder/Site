// Generated by CoffeeScript 1.4.0
(function() {
  var DocController,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  DocController = (function(_super) {

    __extends(DocController, _super);

    DocController.prototype.elements = {
      '#docList': 'docList'
    };

    DocController.prototype.events = {
      'click .downloadDoc': 'downloadDoc'
    };

    function DocController() {
      this.renderDocs = __bind(this.renderDocs, this);

      var _this = this;
      DocController.__super__.constructor.apply(this, arguments);
      DocModel.bind("ajaxSuccess", function(status, xhr) {
        return _this.log("Ajax success: " + status);
      });
      DocModel.bind("ajaxError", function(record, xhr, settings, error) {
        return _this.log("Ajax error: " + error);
      });
      DocModel.bind("refresh", this.renderDocs);
      DocModel.fetch();
    }

    DocController.prototype.renderDocs = function() {
      var _this = this;
      this.docList.html('');
      return DocModel.each(function(item) {
        var view;
        view = new DocView({
          docModel: item
        });
        return _this.docList.prepend(view.render().el);
      });
    };

    return DocController;

  })(Spine.Controller);

  $(function() {
    return new DocController({
      el: $('body')
    });
  });

}).call(this);
